{
  "openapi": "3.1.0",
  "info": {
    "description": "",
    "title": "Pulsate API Document",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "CreateAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Account ID",
            "example": "38477395"
          },
          "name": {
            "type": "string",
            "description": "account name",
            "example": "@example_man@example.com"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "account email address",
            "example": "foo@example.com"
          }
        },
        "required": [
          "id",
          "name",
          "email"
        ]
      },
      "InternalErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": [
              "INTERNAL_ERROR"
            ],
            "description": "Internal server error."
          }
        },
        "required": [
          "error"
        ]
      },
      "CreateAccountRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
            "example": "@example_man@example.com"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "foo@example.com"
          },
          "passphrase": {
            "type": "string",
            "minLength": 8,
            "maxLength": 512,
            "description": "Passphrase must be a UTF-8 string excluding spaces, tabs, full-width spaces, newlines, and null characters.",
            "example": "„Åò„ÇÉ„Åô„Åü„Éª„ÅÑ„Åê„Åñ„Çì„ÅΩ„ÅÖ"
          },
          "captcha_token": {
            "type": "string",
            "description": "Captcha token (e.g. reCAPTCHA, Cloudflare Trunstile)"
          }
        },
        "required": [
          "name",
          "email",
          "passphrase",
          "captcha_token"
        ]
      },
      "UpdateAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Account ID",
            "example": "38477395"
          },
          "name": {
            "type": "string",
            "description": "account name",
            "example": "@example_man@example.com"
          },
          "nickname": {
            "type": "string",
            "description": "account nickname",
            "example": "John Doe"
          },
          "bio": {
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "description": "Biography",
            "examples": [
              "",
              "„ÅÑ„ÅÑÊÑü„Åò„ÅÆËá™Â∑±Á¥π‰ªãüÜì",
              "This is bio hello^~ <:javascript:358409384>"
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "account email address",
            "example": "foo@example.com"
          }
        },
        "required": [
          "id",
          "name",
          "nickname",
          "bio",
          "email"
        ]
      },
      "UpdateAccountRequest": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "description": "Nickname",
            "examples": [
              "Johndoe<:typescript:3939849792873>",
              "„Ç∏„Éß„É≥„Éª„Éâ„Ç•üöâ"
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address",
            "example": "john@example.com"
          },
          "passphrase": {
            "type": "string",
            "minLength": 8,
            "maxLength": 512,
            "description": "Passphrase",
            "example": "„Åò„ÇÉ„Åô„Åü„Éª„ÅÑ„Åê„Åñ„Çì„ÅΩ„ÅÖ"
          },
          "bio": {
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "description": "Biography",
            "examples": [
              "",
              "„ÅÑ„ÅÑÊÑü„Åò„ÅÆËá™Â∑±Á¥π‰ªãüÜì",
              "This is bio hello^~ <:javascript:358409384>"
            ]
          }
        },
        "required": [
          "bio"
        ]
      },
      "VerifyEmailRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Verification token",
            "example": "vq34rvyanho10q9hbc98ydbvaervna43r0varhj"
          }
        },
        "required": [
          "token"
        ]
      },
      "GetAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "account ID",
            "example": "38477395"
          },
          "email": {
            "type": "string",
            "description": "account email address (only when logged in to an account with viewing privileges)",
            "example": "johndoe@example.com"
          },
          "name": {
            "type": "string",
            "minLength": 8,
            "maxLength": 512,
            "description": "account name",
            "example": "@johndoe@example.com"
          },
          "nickname": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "description": "account nickname",
            "example": "JohnDoe<:typescript:299384730049>"
          },
          "bio": {
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "description": "Biography",
            "examples": [
              "",
              "„ÅÑ„ÅÑÊÑü„Åò„ÅÆËá™Â∑±Á¥π‰ªãüÜì",
              "This is bio hello^~ <:javascript:358409384>"
            ]
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "avatar URL",
            "example": "https://example.com/avatar.png"
          },
          "header": {
            "type": "string",
            "format": "uri",
            "description": "header URL",
            "example": "https://example.com/header.png"
          },
          "followed_count": {
            "type": "number",
            "description": "followed count",
            "example": 100
          },
          "following_count": {
            "type": "number",
            "description": "following count",
            "example": 100
          },
          "note_count": {
            "type": "number",
            "description": "note count",
            "example": 100
          },
          "role": {
            "type": "string",
            "description": "account role (only when logged in to an account with viewing privileges)",
            "example": "normal"
          },
          "status": {
            "type": "string",
            "description": "account status (only when logged in to an account with viewing privileges)",
            "example": "active"
          },
          "frozen": {
            "type": "string",
            "description": "account frozen status (only when logged in to an account with viewing privileges)",
            "example": "normal"
          },
          "silenced": {
            "type": "string",
            "description": "account silenced status (only when logged in to an account with viewing privileges)",
            "example": "normal"
          },
          "created_at": {
            "type": "string",
            "description": "account created at (only when logged in to an account with viewing privileges)",
            "example": "2021-01-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "name",
          "nickname",
          "bio",
          "avatar",
          "header",
          "followed_count",
          "following_count",
          "note_count"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "authorization_token": {
            "type": "string",
            "description": "authorization token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzZTE2NDQ4MzMwMDAwMDIiLCJpYXQiOjE2NDA5OTUyMDEsInJlZnJlc2hfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKemRXSWlPaUl6WlRFMk5EUTRNek13TURBd01ESWlMQ0pwWVhRaU9qRTJOREE1T1RVeU1ERjkud2Q4cWJVcWowWGtCU1hud0FxM0lRYU1nQS1RTFd2MHVKU1NLX3BIVTZCYyJ9.mRUfLIYOGlLuC9D72zBriVvrHYrQgVHW7ntQ-bp5SHs"
          }
        },
        "required": [
          "authorization_token"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 8,
            "maxLength": 512,
            "description": "account name",
            "example": "@johndoe@example.com"
          },
          "passphrase": {
            "type": "string",
            "minLength": 8,
            "maxLength": 512,
            "description": "Passphrase",
            "example": "„Åò„ÇÉ„Åô„Åü„Éª„ÅÑ„Åê„Åñ„Çì„ÅΩ„ÅÖ"
          },
          "captcha_token": {
            "type": "string",
            "description": "Captcha token (e.g. reCAPTCHA, Cloudflare Trunstile)"
          }
        },
        "required": [
          "name",
          "passphrase",
          "captcha_token"
        ]
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "authorization_token": {
            "type": "string",
            "description": "authorization token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzZTE2NDQ4MzMwMDAwMDIiLCJpYXQiOjE2NDA5OTUyMDEsInJlZnJlc2hfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKemRXSWlPaUl6WlRFMk5EUTRNek13TURBd01ESWlMQ0pwWVhRaU9qRTJOREE1T1RVeU1ERjkud2Q4cWJVcWowWGtCU1hud0FxM0lRYU1nQS1RTFd2MHVKU1NLX3BIVTZCYyJ9.mRUfLIYOGlLuC9D72zBriVvrHYrQgVHW7ntQ-bp5SHs"
          }
        },
        "required": [
          "authorization_token"
        ]
      },
      "ResendVerificationEmailRequest": {
        "type": "object",
        "properties": {
          "captcha_token": {
            "type": "string",
            "description": "Captcha token (e.g. reCAPTCHA, Cloudflare Trunstile)"
          }
        },
        "required": [
          "captcha_token"
        ]
      },
      "GetAccountFollowingResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GetAccountResponse"
        }
      },
      "GetAccountTimelineResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Note ID",
              "example": "38477395"
            },
            "content": {
              "type": "string",
              "description": "Note content",
              "example": "hello world!"
            },
            "contents_warning_comment": {
              "type": "string",
              "description": "Contents warning comment",
              "example": "(if length not 0) This note contains sensitive content"
            },
            "visibility": {
              "type": "string",
              "description": "Note visibility (PUBLIC/HOME/FOLLOWERS/DIRECT)",
              "example": "PUBLIC"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Note created date",
              "example": "2021-01-01T00:00:00Z"
            },
            "reactions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "emoji": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "[\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF]"
                      },
                      {
                        "type": "string",
                        "pattern": "<:(\\w+):(\\d+)>"
                      }
                    ],
                    "description": "Reaction Emoji (Unicode or Custom Emoji)",
                    "examples": [
                      "üéâ",
                      "<:custom_emoji:123456789>"
                    ]
                  },
                  "reacted_by": {
                    "type": "string",
                    "description": "Reacted account ID",
                    "example": "38477395"
                  }
                },
                "required": [
                  "emoji",
                  "reacted_by"
                ]
              },
              "description": "Reactions"
            },
            "attachment_files": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "attachment Medium id",
                    "example": "39783475"
                  },
                  "name": {
                    "type": "string",
                    "description": "attachment filename",
                    "example": "image.jpg"
                  },
                  "author_id": {
                    "type": "string",
                    "description": "attachment author account id",
                    "example": "309823457"
                  },
                  "hash": {
                    "type": "string",
                    "description": "attachment medium blurhash",
                    "example": "e9f*5oin{dn"
                  },
                  "mime": {
                    "type": "string",
                    "description": "attachment medium mime type",
                    "example": "image/jpeg"
                  },
                  "nsfw": {
                    "type": "boolean",
                    "default": false,
                    "description": "if true, attachment is nsfw"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "attachment medium url",
                    "example": "https://images.example.com/image.webp"
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "attachment thumbnail url",
                    "example": "https://images.example.com/image_thumbnail.webp"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "author_id",
                  "hash",
                  "mime",
                  "nsfw",
                  "url",
                  "thumbnail"
                ]
              },
              "maxItems": 16,
              "description": "Note Attachment Media"
            },
            "author": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "bio": {
                  "type": "string"
                },
                "avatar": {
                  "type": "string"
                },
                "header": {
                  "type": "string"
                },
                "followed_count": {
                  "type": "number"
                },
                "following_count": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "name",
                "display_name",
                "bio",
                "avatar",
                "header",
                "followed_count",
                "following_count"
              ]
            }
          },
          "required": [
            "id",
            "content",
            "contents_warning_comment",
            "visibility",
            "created_at",
            "reactions",
            "attachment_files",
            "author"
          ]
        }
      },
      "Account ID": {
        "type": "string"
      },
      "GetListTimelineResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Note ID",
              "example": "38477395"
            },
            "content": {
              "type": "string",
              "description": "Note content",
              "example": "hello world!"
            },
            "contents_warning_comment": {
              "type": "string",
              "description": "Contents warning comment",
              "example": "(if length not 0) This note contains sensitive content"
            },
            "visibility": {
              "type": "string",
              "description": "Note visibility (PUBLIC/HOME/FOLLOWERS/DIRECT)",
              "example": "PUBLIC"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Note created date",
              "example": "2021-01-01T00:00:00Z"
            },
            "author": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "bio": {
                  "type": "string"
                },
                "avatar": {
                  "type": "string"
                },
                "header": {
                  "type": "string"
                },
                "followed_count": {
                  "type": "number"
                },
                "following_count": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "name",
                "display_name",
                "bio",
                "avatar",
                "header",
                "followed_count",
                "following_count"
              ]
            },
            "reactions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "emoji": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "[\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF]"
                      },
                      {
                        "type": "string",
                        "pattern": "<:(\\w+):(\\d+)>"
                      }
                    ],
                    "description": "Reaction Emoji (Unicode or Custom Emoji)",
                    "examples": [
                      "üéâ",
                      "<:custom_emoji:123456789>"
                    ]
                  },
                  "reacted_by": {
                    "type": "string",
                    "description": "Reacted account ID",
                    "example": "38477395"
                  }
                },
                "required": [
                  "emoji",
                  "reacted_by"
                ]
              },
              "description": "Reactions"
            },
            "attachment_files": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "attachment Medium id",
                    "example": "39783475"
                  },
                  "name": {
                    "type": "string",
                    "description": "attachment filename",
                    "example": "image.jpg"
                  },
                  "author_id": {
                    "type": "string",
                    "description": "attachment author account id",
                    "example": "309823457"
                  },
                  "hash": {
                    "type": "string",
                    "description": "attachment medium blurhash",
                    "example": "e9f*5oin{dn"
                  },
                  "mime": {
                    "type": "string",
                    "description": "attachment medium mime type",
                    "example": "image/jpeg"
                  },
                  "nsfw": {
                    "type": "boolean",
                    "default": false,
                    "description": "if true, attachment is nsfw"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "attachment medium url",
                    "example": "https://images.example.com/image.webp"
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "attachment thumbnail url",
                    "example": "https://images.example.com/image_thumbnail.webp"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "author_id",
                  "hash",
                  "mime",
                  "nsfw",
                  "url",
                  "thumbnail"
                ]
              },
              "maxItems": 16,
              "description": "Note Attachment Media"
            }
          },
          "required": [
            "id",
            "content",
            "contents_warning_comment",
            "visibility",
            "created_at",
            "author",
            "reactions",
            "attachment_files"
          ]
        }
      },
      "List ID": {
        "type": "string"
      },
      "CreateListResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "List ID",
            "example": "38477395"
          },
          "title": {
            "type": "string",
            "description": "List title",
            "example": "Pulsate developers"
          },
          "public": {
            "type": "boolean",
            "description": "If true, list is public",
            "example": false
          }
        },
        "required": [
          "id",
          "title",
          "public"
        ]
      },
      "CreateListRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "List title (1-100 characters)",
            "example": "Pulsate developers"
          },
          "public": {
            "type": "boolean",
            "description": "If true, list is public",
            "example": false
          }
        },
        "required": [
          "title",
          "public"
        ]
      },
      "EditListResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "List ID",
            "example": "38477395"
          },
          "title": {
            "type": "string",
            "description": "List title",
            "example": "Pulsate developers"
          },
          "public": {
            "type": "boolean",
            "description": "If true, list is public",
            "example": false
          }
        },
        "required": [
          "id",
          "title",
          "public"
        ]
      },
      "EditListRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "List title",
            "example": "Pulsate developers"
          },
          "public": {
            "type": "boolean",
            "description": "If true, list is public",
            "example": false
          }
        }
      },
      "FetchListResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "List ID",
            "example": "38477395"
          },
          "title": {
            "type": "string",
            "description": "List title",
            "example": "Pulsate developers"
          },
          "public": {
            "type": "boolean",
            "description": "If true, list is public",
            "example": false
          }
        },
        "required": [
          "id",
          "title",
          "public"
        ]
      },
      "GetListMemberResponseSchema": {
        "type": "object",
        "properties": {
          "assignees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Assignee account ID",
                  "example": "30984308495"
                },
                "name": {
                  "type": "string",
                  "description": "Assignee account name",
                  "example": "@john@example.com"
                },
                "nickname": {
                  "type": "string",
                  "description": "Assignee nickname",
                  "example": "John Doe"
                },
                "avatar": {
                  "type": "string",
                  "format": "uri",
                  "description": "avatar URL",
                  "example": "https://example.com/avatar.png"
                }
              },
              "required": [
                "id",
                "name",
                "nickname",
                "avatar"
              ]
            }
          }
        },
        "required": [
          "assignees"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/v0/accounts": {
      "post": {
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "INVALID_ACCOUNT_NAME"
                          ],
                          "description": "Account name is invalid."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "TOO_LONG_ACCOUNT_NAME"
                          ],
                          "description": "Account name is too long."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "YOU_ARE_BOT"
                          ],
                          "description": "CAPTCHA verification failed."
                        }
                      ],
                      "description": "Error codes",
                      "example": "INVALID_ACCOUNT_NAME"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "EMAIL_IN_USE"
                          ],
                          "description": "Account email is already in use."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ACCOUNT_NAME_IN_USE"
                          ],
                          "description": "Account name is already in use."
                        }
                      ],
                      "description": "Error codes",
                      "example": "ACCOUNT_NAME_IN_USE"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name": {
      "patch": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountResponse"
                }
              }
            }
          },
          "202": {
            "description": "When email updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "INVALID_SEQUENCE"
                          ],
                          "description": "Contains unusable character types in parameters."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "VULNERABLE_PASSPHRASE"
                          ],
                          "description": "Passphrase is too weak."
                        }
                      ],
                      "description": "error codes"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INVALID_ETAG"
                      ],
                      "description": "ETag is invalid."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "etag is invalid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/freeze": {
      "put": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ALREADY_FROZEN"
                      ],
                      "description": "Account is already frozen."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account already frozen"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/verify_email": {
      "post": {
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INVALID_TOKEN"
                      ],
                      "description": "EMail verification token is invalid."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "email address token is invalid"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:identifier": {
      "get": {
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "description": "account name",
                  "example": "@johndoe@example.com"
                },
                {
                  "type": "string",
                  "description": "account id",
                  "example": "31644833000002"
                }
              ],
              "description": "account name or id",
              "example": "@johndoe@example.com"
            },
            "required": true,
            "name": "identifier",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/login": {
      "post": {
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "FAILED_TO_LOGIN"
                      ],
                      "description": "Failed to login. Passphrase or Account Name is invalid."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "failed to login."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "YOU_ARE_FROZEN"
                      ],
                      "description": "Your account is frozen, you can't login."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not login."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/refresh": {
      "post": {
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Bearer token"
            },
            "required": true,
            "name": "Authorization",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "INVALID_TOKEN"
                          ],
                          "description": "Refresh token is invalid."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "EXPIRED_TOKEN"
                          ],
                          "description": "Refresh or Access token is expired. Please re-login."
                        }
                      ],
                      "description": "error codes",
                      "example": "INVALID_TOKEN"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/silence": {
      "put": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/follow": {
      "post": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "204": {
            "description": "Accepted(No Content)"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ALREADY_FOLLOWING"
                          ],
                          "description": "You are already following this account."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "YOU_ARE_BLOCKED"
                          ],
                          "description": "You are blocked by this account."
                        }
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "YOU_ARE_NOT_FOLLOWING"
                      ],
                      "description": "You are not following this account."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You are not following specified account."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/resend_verify_email": {
      "post": {
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmailRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_ALREADY_VERIFIED"
                      ],
                      "description": "Account email address is already verified."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account email is already verified."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:id/following": {
      "get": {
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountFollowingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:id/follower": {
      "get": {
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountFollowingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/avatar": {
      "post": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "medium_id": {
                    "type": "string",
                    "description": "Medium ID",
                    "example": "38477395"
                  }
                },
                "required": [
                  "medium_id"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ],
                          "description": "Account not found."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "FILE_NOT_FOUND"
                          ],
                          "description": "File not found"
                        }
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/header": {
      "post": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "medium_id": {
                    "type": "string",
                    "description": "Medium ID",
                    "example": "38477395"
                  }
                },
                "required": [
                  "medium_id"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ],
                          "description": "Account not found."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "FILE_NOT_FOUND"
                          ],
                          "description": "File not found"
                        }
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/accounts/:name/head": {
      "delete": {
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 64,
              "description": "Characters must be [A-Za-z0-9-.] The first and last characters must be [A-Za-z0-9-.]",
              "example": "example_man"
            },
            "required": true,
            "name": "name",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NO_PERMISSION"
                      ],
                      "description": "You can't do this action."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can not do this action."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT_NOT_FOUND"
                      ],
                      "description": "Account not found."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/notes": {
      "post": {
        "tags": [
          "notes"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": "",
                    "description": "Note content (max 3000 characters/if attachment file exists, allow 0 character)",
                    "example": "hello world!"
                  },
                  "visibility": {
                    "type": "string",
                    "default": "PUBLIC",
                    "description": "Note visibility (PUBLIC/HOME/FOLLOWERS/DIRECT)",
                    "example": "PUBLIC"
                  },
                  "attachment_file_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 16,
                    "default": [],
                    "description": "Attachment file IDs (max 16 files)",
                    "example": [
                      "38477395",
                      "38477396"
                    ]
                  },
                  "contents_warning_comment": {
                    "type": "string",
                    "maxLength": 256,
                    "default": "",
                    "description": "Contents warning comment (max 256 characters)",
                    "example": "This note contains sensitive content"
                  },
                  "send_to": {
                    "type": "string",
                    "default": "",
                    "description": "Send to account ID (if visibility is DIRECT)",
                    "example": "38477395"
                  }
                },
                "required": [
                  "content",
                  "visibility",
                  "attachment_file_ids",
                  "contents_warning_comment"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Note ID",
                      "example": "38477395"
                    },
                    "content": {
                      "type": "string",
                      "description": "Note content",
                      "example": "hello world!"
                    },
                    "visibility": {
                      "type": "string",
                      "description": "Note visibility",
                      "example": "PUBLIC"
                    },
                    "contents_warning_comment": {
                      "type": "string",
                      "description": "Contents warning comment",
                      "example": "This note contains sensitive content"
                    },
                    "send_to": {
                      "type": "string",
                      "description": "Send to account ID",
                      "example": "38477395"
                    },
                    "author_id": {
                      "type": "string",
                      "description": "Author account ID",
                      "example": "38477395"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Note created date",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "attachment_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "attachment Medium id",
                            "example": "39783475"
                          },
                          "name": {
                            "type": "string",
                            "description": "attachment filename",
                            "example": "image.jpg"
                          },
                          "author_id": {
                            "type": "string",
                            "description": "attachment author account id",
                            "example": "309823457"
                          },
                          "hash": {
                            "type": "string",
                            "description": "attachment medium blurhash",
                            "example": "e9f*5oin{dn"
                          },
                          "mime": {
                            "type": "string",
                            "description": "attachment medium mime type",
                            "example": "image/jpeg"
                          },
                          "nsfw": {
                            "type": "boolean",
                            "default": false,
                            "description": "if true, attachment is nsfw"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "attachment medium url",
                            "example": "https://images.example.com/image.webp"
                          },
                          "thumbnail": {
                            "type": "string",
                            "description": "attachment thumbnail url",
                            "example": "https://images.example.com/image_thumbnail.webp"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "author_id",
                          "hash",
                          "mime",
                          "nsfw",
                          "url",
                          "thumbnail"
                        ]
                      },
                      "maxItems": 16,
                      "description": "Note Attachment Media"
                    }
                  },
                  "required": [
                    "id",
                    "content",
                    "visibility",
                    "contents_warning_comment",
                    "author_id",
                    "created_at",
                    "attachment_files"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "TOO_MANY_ATTACHMENTS"
                          ],
                          "description": "This note has too many attachments"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "TOO_MANY_CONTENT"
                          ],
                          "description": "This note has too many (CW Comments or Note content)"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "NO_DESTINATION"
                          ],
                          "description": "This note has no destination"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "INVALID_VISIBILITY"
                          ],
                          "description": "This note has an invalid visibility"
                        }
                      ],
                      "description": "Error codes",
                      "example": "TOO_MANY_ATTACHMENTS"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You are silenced",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "YOU_ARE_SILENCED"
                      ],
                      "description": "You are silenced (You cannot set visibility to public"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can't set note visibility to PUBLIC"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ATTACHMENT_NOT_FOUND"
                          ],
                          "description": "Attachment not found"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ],
                          "description": "Account not found."
                        }
                      ],
                      "description": "Error codes",
                      "example": "ATTACHMENT_NOT_FOUND"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal Error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/notes/:id": {
      "get": {
        "tags": [
          "notes"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Note ID",
              "example": "1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Note ID",
                      "example": "38477395"
                    },
                    "content": {
                      "type": "string",
                      "description": "Note content",
                      "example": "hello world!"
                    },
                    "contents_warning_comment": {
                      "type": "string",
                      "description": "Contents warning comment",
                      "example": "(if length not 0) This note contains sensitive content"
                    },
                    "send_to": {
                      "type": "string",
                      "description": "Send to account ID",
                      "example": "38477395"
                    },
                    "visibility": {
                      "type": "string",
                      "description": "Note visibility (PUBLIC/HOME/FOLLOWERS/DIRECT)",
                      "example": "PUBLIC"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Note created date",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "bio": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "header": {
                          "type": "string"
                        },
                        "followed_count": {
                          "type": "number"
                        },
                        "following_count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "display_name",
                        "bio",
                        "avatar",
                        "header",
                        "followed_count",
                        "following_count"
                      ]
                    },
                    "reactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "emoji": {
                            "anyOf": [
                              {
                                "type": "string",
                                "pattern": "[\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF]"
                              },
                              {
                                "type": "string",
                                "pattern": "<:(\\w+):(\\d+)>"
                              }
                            ],
                            "description": "Reaction Emoji (Unicode or Custom Emoji)",
                            "examples": [
                              "üéâ",
                              "<:custom_emoji:123456789>"
                            ]
                          },
                          "reacted_by": {
                            "type": "string",
                            "description": "Reacted account ID",
                            "example": "38477395"
                          }
                        },
                        "required": [
                          "emoji",
                          "reacted_by"
                        ]
                      },
                      "description": "Reactions"
                    },
                    "attachment_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "attachment Medium id",
                            "example": "39783475"
                          },
                          "name": {
                            "type": "string",
                            "description": "attachment filename",
                            "example": "image.jpg"
                          },
                          "author_id": {
                            "type": "string",
                            "description": "attachment author account id",
                            "example": "309823457"
                          },
                          "hash": {
                            "type": "string",
                            "description": "attachment medium blurhash",
                            "example": "e9f*5oin{dn"
                          },
                          "mime": {
                            "type": "string",
                            "description": "attachment medium mime type",
                            "example": "image/jpeg"
                          },
                          "nsfw": {
                            "type": "boolean",
                            "default": false,
                            "description": "if true, attachment is nsfw"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "attachment medium url",
                            "example": "https://images.example.com/image.webp"
                          },
                          "thumbnail": {
                            "type": "string",
                            "description": "attachment thumbnail url",
                            "example": "https://images.example.com/image_thumbnail.webp"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "author_id",
                          "hash",
                          "mime",
                          "nsfw",
                          "url",
                          "thumbnail"
                        ]
                      },
                      "maxItems": 16,
                      "description": "Note Attachment Media"
                    }
                  },
                  "required": [
                    "id",
                    "content",
                    "contents_warning_comment",
                    "visibility",
                    "created_at",
                    "author",
                    "reactions",
                    "attachment_files"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NOTE_NOT_FOUND"
                      ],
                      "description": "Note not found"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Note not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal Error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/notes/:id/renote": {
      "post": {
        "tags": [
          "notes"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Note ID",
              "example": "1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "maxLength": 3000,
                    "default": "",
                    "description": "Note content (max 3000 characters/if attachment file exists, allow 0 character)",
                    "example": "hello world!"
                  },
                  "visibility": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "public"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "home"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "followers"
                        ]
                      }
                    ],
                    "default": "public",
                    "description": "Note visibility (public/home/followers)",
                    "example": "public"
                  },
                  "attachment_file_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 16,
                    "default": [],
                    "description": "Attachment file IDs (max 16 files)",
                    "example": [
                      "38477395",
                      "38477396"
                    ]
                  },
                  "contents_warning_comment": {
                    "type": "string",
                    "maxLength": 256,
                    "default": "",
                    "description": "Contents warning comment (max 256 characters)",
                    "example": "This note contains sensitive content"
                  }
                },
                "required": [
                  "content",
                  "visibility",
                  "attachment_file_ids",
                  "contents_warning_comment"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Note ID",
                      "example": "38477395"
                    },
                    "content": {
                      "type": "string",
                      "description": "Note content",
                      "example": "hello world!"
                    },
                    "visibility": {
                      "type": "string",
                      "description": "Note visibility",
                      "example": "PUBLIC"
                    },
                    "original_note_id": {
                      "type": "string",
                      "description": "Original note ID",
                      "example": "38477395"
                    },
                    "contents_warning_comment": {
                      "type": "string",
                      "description": "Contents warning comment",
                      "example": "This note contains sensitive content"
                    },
                    "author_id": {
                      "type": "string",
                      "description": "Author account ID",
                      "example": "38477395"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Note created date",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "attachment_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "attachment Medium id",
                            "example": "39783475"
                          },
                          "name": {
                            "type": "string",
                            "description": "attachment filename",
                            "example": "image.jpg"
                          },
                          "author_id": {
                            "type": "string",
                            "description": "attachment author account id",
                            "example": "309823457"
                          },
                          "hash": {
                            "type": "string",
                            "description": "attachment medium blurhash",
                            "example": "e9f*5oin{dn"
                          },
                          "mime": {
                            "type": "string",
                            "description": "attachment medium mime type",
                            "example": "image/jpeg"
                          },
                          "nsfw": {
                            "type": "boolean",
                            "default": false,
                            "description": "if true, attachment is nsfw"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "attachment medium url",
                            "example": "https://images.example.com/image.webp"
                          },
                          "thumbnail": {
                            "type": "string",
                            "description": "attachment thumbnail url",
                            "example": "https://images.example.com/image_thumbnail.webp"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "author_id",
                          "hash",
                          "mime",
                          "nsfw",
                          "url",
                          "thumbnail"
                        ]
                      },
                      "maxItems": 16,
                      "description": "Note Attachment Media"
                    }
                  },
                  "required": [
                    "id",
                    "content",
                    "visibility",
                    "original_note_id",
                    "contents_warning_comment",
                    "author_id",
                    "created_at",
                    "attachment_files"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "TOO_MANY_CONTENT"
                          ],
                          "description": "This note has too many (CW Comments or Note content)"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "TOO_MANY_ATTACHMENTS"
                          ],
                          "description": "This note has too many attachments"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "INVALID_VISIBILITY"
                          ],
                          "description": "This note has an invalid visibility"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "NO_DESTINATION"
                          ],
                          "description": "This note has no destination"
                        }
                      ],
                      "description": "Error codes",
                      "example": "TOO_MANY_CONTENT"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You are silenced",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "YOU_ARE_SILENCED"
                      ],
                      "description": "You are silenced (You cannot set visibility to public"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "You can't set note visibility to PUBLIC"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "NOTE_NOT_FOUND"
                          ],
                          "description": "Note not found"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ATTACHMENT_NOT_FOUND"
                          ],
                          "description": "Attachment not found"
                        }
                      ],
                      "description": "Error codes",
                      "example": "NOTE_NOT_FOUND"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal Error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/notes/:id/reaction": {
      "post": {
        "tags": [
          "reaction"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Note ID",
              "example": "1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emoji": {
                    "type": "string",
                    "description": "emoji",
                    "example": "üéâ"
                  }
                },
                "required": [
                  "emoji"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Note ID",
                      "example": "38477395"
                    },
                    "content": {
                      "type": "string",
                      "description": "Note content",
                      "example": "hello world!"
                    },
                    "visibility": {
                      "type": "string",
                      "description": "Note visibility",
                      "example": "PUBLIC"
                    },
                    "contents_warning_comment": {
                      "type": "string",
                      "description": "Contents warning comment",
                      "example": "This note contains sensitive content"
                    },
                    "author_id": {
                      "type": "string",
                      "description": "Author account ID",
                      "example": "38477395"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Note created date",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "attachment_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "attachment Medium id",
                            "example": "39783475"
                          },
                          "name": {
                            "type": "string",
                            "description": "attachment filename",
                            "example": "image.jpg"
                          },
                          "author_id": {
                            "type": "string",
                            "description": "attachment author account id",
                            "example": "309823457"
                          },
                          "hash": {
                            "type": "string",
                            "description": "attachment medium blurhash",
                            "example": "e9f*5oin{dn"
                          },
                          "mime": {
                            "type": "string",
                            "description": "attachment medium mime type",
                            "example": "image/jpeg"
                          },
                          "nsfw": {
                            "type": "boolean",
                            "default": false,
                            "description": "if true, attachment is nsfw"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "attachment medium url",
                            "example": "https://images.example.com/image.webp"
                          },
                          "thumbnail": {
                            "type": "string",
                            "description": "attachment thumbnail url",
                            "example": "https://images.example.com/image_thumbnail.webp"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "author_id",
                          "hash",
                          "mime",
                          "nsfw",
                          "url",
                          "thumbnail"
                        ]
                      },
                      "maxItems": 16,
                      "description": "Note Attachment Media"
                    }
                  },
                  "required": [
                    "id",
                    "content",
                    "visibility",
                    "contents_warning_comment",
                    "author_id",
                    "created_at",
                    "attachment_files"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ALREADY_REACTED"
                          ],
                          "description": "You already reacted to this note"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "EMOJI_NOT_FOUND"
                          ],
                          "description": "Emoji not found (Custom Emoji) / Specified many emojis (Unicode Emoji)"
                        }
                      ],
                      "description": "Error codes",
                      "example": "ALREADY_REACTED"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NOTE_NOT_FOUND"
                      ],
                      "description": "Note not found"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal Error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reaction"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Note ID",
              "example": "1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Reaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NOT_REACTED"
                      ],
                      "description": "You did not react to this note"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal Error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/notes/:id/bookmark": {
      "post": {
        "tags": [
          "bookmark"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Note ID",
              "example": "1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Note ID",
                      "example": "38477395"
                    },
                    "content": {
                      "type": "string",
                      "description": "Note content",
                      "example": "hello world!"
                    },
                    "visibility": {
                      "type": "string",
                      "description": "Note visibility",
                      "example": "PUBLIC"
                    },
                    "contents_warning_comment": {
                      "type": "string",
                      "description": "Contents warning comment",
                      "example": "This note contains sensitive content"
                    },
                    "author_id": {
                      "type": "string",
                      "description": "Author account ID",
                      "example": "38477395"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Note created date",
                      "example": "2021-01-01T00:00:00Z"
                    },
                    "attachment_files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "attachment Medium id",
                            "example": "39783475"
                          },
                          "name": {
                            "type": "string",
                            "description": "attachment filename",
                            "example": "image.jpg"
                          },
                          "author_id": {
                            "type": "string",
                            "description": "attachment author account id",
                            "example": "309823457"
                          },
                          "hash": {
                            "type": "string",
                            "description": "attachment medium blurhash",
                            "example": "e9f*5oin{dn"
                          },
                          "mime": {
                            "type": "string",
                            "description": "attachment medium mime type",
                            "example": "image/jpeg"
                          },
                          "nsfw": {
                            "type": "boolean",
                            "default": false,
                            "description": "if true, attachment is nsfw"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "attachment medium url",
                            "example": "https://images.example.com/image.webp"
                          },
                          "thumbnail": {
                            "type": "string",
                            "description": "attachment thumbnail url",
                            "example": "https://images.example.com/image_thumbnail.webp"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "author_id",
                          "hash",
                          "mime",
                          "nsfw",
                          "url",
                          "thumbnail"
                        ]
                      },
                      "maxItems": 16,
                      "description": "Note Attachment Media"
                    }
                  },
                  "required": [
                    "id",
                    "content",
                    "visibility",
                    "contents_warning_comment",
                    "author_id",
                    "created_at",
                    "attachment_files"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NOTE_NOT_FOUND"
                      ],
                      "description": "Note not found"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Note not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal Error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bookmark"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Note ID",
              "example": "1"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Bookmark not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NOTE_NOT_FOUND"
                      ],
                      "description": "Note not found"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal Error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/drive": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get uploaded media",
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "medium ID",
                        "example": "38477395"
                      },
                      "author_id": {
                        "type": "string",
                        "description": "account ID",
                        "example": "38477395"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256,
                        "description": "medium name",
                        "example": "kyoto.jpg"
                      },
                      "hash": {
                        "type": "string",
                        "description": "medium hash (blurhash)",
                        "example": "LEHLk~WB2yk8pyo0adR*.7kCMdnj"
                      },
                      "mime": {
                        "type": "string",
                        "description": "media mime type",
                        "example": "image/jpeg"
                      },
                      "nsfw": {
                        "type": "boolean",
                        "description": "nsfw flag",
                        "example": false
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "media URL",
                        "example": "https://example.com/38477395.jpg"
                      },
                      "thumbnail": {
                        "type": "string",
                        "format": "uri",
                        "description": "thumbnail URL",
                        "example": "https://example.com/38477395_thumb.jpg"
                      }
                    },
                    "required": [
                      "id",
                      "author_id",
                      "name",
                      "hash",
                      "mime",
                      "nsfw",
                      "url",
                      "thumbnail"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "FILE_NOT_FOUND"
                      ],
                      "description": "File not found"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v0/timeline/home": {
      "get": {
        "tags": [
          "timeline"
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes with attachment"
            },
            "required": false,
            "name": "has_attachment",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes without sensitive content"
            },
            "required": false,
            "name": "no_nsfw",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes before this note ID. specified note ID is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "before_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes after this note ID. Specified note is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "after_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Note ID",
                        "example": "38477395"
                      },
                      "content": {
                        "type": "string",
                        "description": "Note content",
                        "example": "hello world!"
                      },
                      "contents_warning_comment": {
                        "type": "string",
                        "description": "Contents warning comment",
                        "example": "(if length not 0) This note contains sensitive content"
                      },
                      "visibility": {
                        "type": "string",
                        "description": "Note visibility (PUBLIC/HOME/FOLLOWERS/DIRECT)",
                        "example": "PUBLIC"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Note created date",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "reactions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "emoji": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "[\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF]"
                                },
                                {
                                  "type": "string",
                                  "pattern": "<:(\\w+):(\\d+)>"
                                }
                              ],
                              "description": "Reaction Emoji (Unicode or Custom Emoji)",
                              "examples": [
                                "üéâ",
                                "<:custom_emoji:123456789>"
                              ]
                            },
                            "reacted_by": {
                              "type": "string",
                              "description": "Reacted account ID",
                              "example": "38477395"
                            }
                          },
                          "required": [
                            "emoji",
                            "reacted_by"
                          ]
                        },
                        "description": "Reactions"
                      },
                      "attachment_files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "attachment Medium id",
                              "example": "39783475"
                            },
                            "name": {
                              "type": "string",
                              "description": "attachment filename",
                              "example": "image.jpg"
                            },
                            "author_id": {
                              "type": "string",
                              "description": "attachment author account id",
                              "example": "309823457"
                            },
                            "hash": {
                              "type": "string",
                              "description": "attachment medium blurhash",
                              "example": "e9f*5oin{dn"
                            },
                            "mime": {
                              "type": "string",
                              "description": "attachment medium mime type",
                              "example": "image/jpeg"
                            },
                            "nsfw": {
                              "type": "boolean",
                              "default": false,
                              "description": "if true, attachment is nsfw"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "attachment medium url",
                              "example": "https://images.example.com/image.webp"
                            },
                            "thumbnail": {
                              "type": "string",
                              "description": "attachment thumbnail url",
                              "example": "https://images.example.com/image_thumbnail.webp"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "author_id",
                            "hash",
                            "mime",
                            "nsfw",
                            "url",
                            "thumbnail"
                          ]
                        },
                        "maxItems": 16,
                        "description": "Note Attachment Media"
                      },
                      "author": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "bio": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "header": {
                            "type": "string"
                          },
                          "followed_count": {
                            "type": "number"
                          },
                          "following_count": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "display_name",
                          "bio",
                          "avatar",
                          "header",
                          "followed_count",
                          "following_count"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "content",
                      "contents_warning_comment",
                      "visibility",
                      "created_at",
                      "reactions",
                      "attachment_files",
                      "author"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nothing left",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NOTHING_LEFT"
                      ],
                      "description": "No more notes exist"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v0/timeline/accounts/:id": {
      "get": {
        "tags": [
          "timeline"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/Account ID"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes with attachment"
            },
            "required": false,
            "name": "has_attachment",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes without sensitive content"
            },
            "required": false,
            "name": "no_nsfw",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes before this note ID. specified note ID is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "before_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes after this note ID. Specified note is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "after_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountTimelineResponse"
                }
              }
            }
          },
          "403": {
            "description": "You are blocked by specified account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "YOU_ARE_BLOCKED"
                      ],
                      "description": "You are blocked by the account"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ],
                          "description": "Account not found."
                        },
                        {
                          "type": "string",
                          "enum": [
                            "NOTHING_LEFT"
                          ],
                          "description": "No more notes exist"
                        }
                      ],
                      "description": "Error codes",
                      "example": "ACCOUNT_NOT_FOUND"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Account not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/lists/:id/notes": {
      "get": {
        "tags": [
          "timeline"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/List ID"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes with attachment"
            },
            "required": false,
            "name": "has_attachment",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes without sensitive content"
            },
            "required": false,
            "name": "no_nsfw",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes before this note ID. specified note ID is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "before_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes after this note ID. Specified note is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "after_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListTimelineResponse"
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "NOTHING_LEFT"
                          ],
                          "description": "No more notes exist"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "LIST_NOT_FOUND"
                          ],
                          "description": "List not found"
                        }
                      ],
                      "description": "Error codes",
                      "example": "LIST_NOT_FOUND"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/lists": {
      "post": {
        "tags": [
          "timeline"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "TITLE_TOO_LONG"
                      ],
                      "description": "List title is too long"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "List title too long"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "timeline"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/List ID"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "List not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "LIST_NOT_FOUND"
                      ],
                      "description": "List not found"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "List not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/lists/:id": {
      "patch": {
        "tags": [
          "timeline"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/List ID"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditListResponse"
                }
              }
            }
          },
          "400": {
            "description": "List title too long",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "TITLE_TOO_LONG"
                      ],
                      "description": "List title is too long"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "List title too long"
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "LIST_NOT_FOUND"
                      ],
                      "description": "List not found"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "timeline"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/List ID"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchListResponse"
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "LIST_NOT_FOUND"
                      ],
                      "description": "List not found"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "List not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v0/lists/:id/members": {
      "get": {
        "tags": [
          "timeline"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListMemberResponseSchema"
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "LIST_NOT_FOUND"
                      ],
                      "description": "List not found"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "List not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "description": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "timeline"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/List ID"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "$ref": "#/components/schemas/Account ID"
                  }
                },
                "required": [
                  "account_id"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Too many members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "TOO_MANY_TARGETS"
                      ],
                      "description": "Too many members to assign list"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have permission to add member to this list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "NO_PERMISSION"
                          ],
                          "description": "No permission to access this object"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "YOU_ARE_BLOCKED"
                          ],
                          "description": "You are blocked by the account"
                        }
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "LIST_NOT_FOUND"
                          ],
                          "description": "List not found"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ],
                          "description": "Account not found."
                        }
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "timeline"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/List ID"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "$ref": "#/components/schemas/Account ID"
                  }
                },
                "required": [
                  "account_id"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "403": {
            "description": "You do not have permission to remove member to this list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "NO_PERMISSION"
                          ],
                          "description": "No permission to access this object"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "YOU_ARE_BLOCKED"
                          ],
                          "description": "You are blocked by the account"
                        }
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "List not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "LIST_NOT_FOUND"
                          ],
                          "description": "List not found"
                        },
                        {
                          "type": "string",
                          "enum": [
                            "ACCOUNT_NOT_FOUND"
                          ],
                          "description": "Account not found."
                        }
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v0/timeline/bookmarks": {
      "get": {
        "tags": [
          "timeline"
        ],
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes with attachment"
            },
            "required": false,
            "name": "has_attachment",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "description": "If true, only return notes without sensitive content"
            },
            "required": false,
            "name": "no_nsfw",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes before this note ID. specified note ID is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "before_id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Return notes after this note ID. Specified note is not included. NOTE: after_id and before_id are exclusive."
            },
            "required": false,
            "name": "after_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Note ID",
                        "example": "38477395"
                      },
                      "content": {
                        "type": "string",
                        "description": "Note content",
                        "example": "hello world!"
                      },
                      "contents_warning_comment": {
                        "type": "string",
                        "description": "Contents warning comment",
                        "example": "(if length not 0) This note contains sensitive content"
                      },
                      "visibility": {
                        "type": "string",
                        "description": "Note visibility (PUBLIC/HOME/FOLLOWERS/DIRECT)",
                        "example": "PUBLIC"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Note created date",
                        "example": "2021-01-01T00:00:00Z"
                      },
                      "reactions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "emoji": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "[\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF]"
                                },
                                {
                                  "type": "string",
                                  "pattern": "<:(\\w+):(\\d+)>"
                                }
                              ],
                              "description": "Reaction Emoji (Unicode or Custom Emoji)",
                              "examples": [
                                "üéâ",
                                "<:custom_emoji:123456789>"
                              ]
                            },
                            "reacted_by": {
                              "type": "string",
                              "description": "Reacted account ID",
                              "example": "38477395"
                            }
                          },
                          "required": [
                            "emoji",
                            "reacted_by"
                          ]
                        },
                        "description": "Reactions"
                      },
                      "attachment_files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "attachment Medium id",
                              "example": "39783475"
                            },
                            "name": {
                              "type": "string",
                              "description": "attachment filename",
                              "example": "image.jpg"
                            },
                            "author_id": {
                              "type": "string",
                              "description": "attachment author account id",
                              "example": "309823457"
                            },
                            "hash": {
                              "type": "string",
                              "description": "attachment medium blurhash",
                              "example": "e9f*5oin{dn"
                            },
                            "mime": {
                              "type": "string",
                              "description": "attachment medium mime type",
                              "example": "image/jpeg"
                            },
                            "nsfw": {
                              "type": "boolean",
                              "default": false,
                              "description": "if true, attachment is nsfw"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "attachment medium url",
                              "example": "https://images.example.com/image.webp"
                            },
                            "thumbnail": {
                              "type": "string",
                              "description": "attachment thumbnail url",
                              "example": "https://images.example.com/image_thumbnail.webp"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "author_id",
                            "hash",
                            "mime",
                            "nsfw",
                            "url",
                            "thumbnail"
                          ]
                        },
                        "maxItems": 16,
                        "description": "Note Attachment Media"
                      },
                      "author": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "bio": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "header": {
                            "type": "string"
                          },
                          "followed_count": {
                            "type": "number"
                          },
                          "following_count": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "display_name",
                          "bio",
                          "avatar",
                          "header",
                          "followed_count",
                          "following_count"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "content",
                      "contents_warning_comment",
                      "visibility",
                      "created_at",
                      "reactions",
                      "attachment_files",
                      "author"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nothing left",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "NOTHING_LEFT"
                      ],
                      "description": "No more notes exist"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "INTERNAL_ERROR"
                      ],
                      "description": "Internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}